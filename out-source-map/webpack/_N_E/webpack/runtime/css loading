var createStylesheet = (chunkId, fullhref, resolve, reject) => {
	var linkTag = document.createElement("link");

	linkTag.rel = "stylesheet";
	linkTag.type = "text/css";
	var onLinkComplete = (event) => {
		// avoid mem leaks.
		linkTag.onerror = linkTag.onload = null;
		if (event.type === 'load') {
			resolve();
		} else {
			var errorType = event && (event.type === 'load' ? 'missing' : event.type);
			var realHref = event && event.target && event.target.href || fullhref;
			var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + realHref + ")");
			err.code = "CSS_CHUNK_LOAD_FAILED";
			err.type = errorType;
			err.request = realHref;
			linkTag.parentNode.removeChild(linkTag)
			reject(err);
		}
	}
	linkTag.onerror = linkTag.onload = onLinkComplete;
	linkTag.href = fullhref;

	(function(linkTag) {
	                if (typeof _N_E_STYLE_LOAD === 'function') {
	                    const { href, onload, onerror } = linkTag;
	                    _N_E_STYLE_LOAD(new URL(href).pathname).then(()=>onload == null ? void 0 : onload.call(linkTag, {
	                            type: 'load'
	                        }), ()=>onerror == null ? void 0 : onerror.call(linkTag, {}));
	                } else {
	                    document.head.appendChild(linkTag);
	                }
	            })(linkTag)
	return linkTag;
};
var findStylesheet = (href, fullhref) => {
	var existingLinkTags = document.getElementsByTagName("link");
	for(var i = 0; i < existingLinkTags.length; i++) {
		var tag = existingLinkTags[i];
		var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
		if(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return tag;
	}
	var existingStyleTags = document.getElementsByTagName("style");
	for(var i = 0; i < existingStyleTags.length; i++) {
		var tag = existingStyleTags[i];
		var dataHref = tag.getAttribute("data-href");
		if(dataHref === href || dataHref === fullhref) return tag;
	}
};
var loadStylesheet = (chunkId) => {
	return new Promise((resolve, reject) => {
		var href = __webpack_require__.miniCssF(chunkId);
		var fullhref = __webpack_require__.p + href;
		if(findStylesheet(href, fullhref)) return resolve();
		createStylesheet(chunkId, fullhref, resolve, reject);
	});
}
// object to store loaded CSS chunks
var installedCssChunks = {
	8068: 0
};

__webpack_require__.f.miniCss = (chunkId, promises) => {
	var cssChunks = {"96":1,"625":1,"943":1,"2252":1,"2560":1,"2633":1,"4254":1,"5112":1,"5907":1,"6574":1,"6675":1,"6788":1,"8305":1};
	if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);
	else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {
		promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {
			installedCssChunks[chunkId] = 0;
		}, (e) => {
			delete installedCssChunks[chunkId];
			throw e;
		}));
	}
};

// no hmr